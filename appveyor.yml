environment:
  matrix:
    - platform: x86
      configuration: release
    - platform: x64
      configuration: release
    - platform: x86
      configuration: debug
    - platform: x64
      configuration: debug

install:
  - if %platform%==x86 set mpv_platform=i686
  - if %platform%==x64 set mpv_platform=x86_64
  - set MPVDIR=c:\mpv
  - if %platform%==x86 set MPVLIBDIR=%MPVDIR%\32
  - if %platform%==x64 set MPVLIBDIR=%MPVDIR%\64
  - if not exist "%MPVDIR%" mkdir "%MPVDIR%"
  - dir /s "%MPVDIR%"
  - ps: |
      if (!(Test-Path "${env:mpvdir}\mpv-dev.7z")) {
         # TLS 1.2 is required by the site
         [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
         $libmpv_site_uri = [System.Uri]"https://mpv.srsfckn.biz/"
         $libmpv_downloads_page = Invoke-WebRequest $libmpv_site_uri
         $libmpv_download_url_rel = $libmpv_downloads_page.AllElements | Where {$_.href -like "*/mpv-dev-*.7z"} | sort -Property href -Descending | select -First 1 -ExpandProperty href
         $libmpv_download_url = New-Object System.Uri -ArgumentList ($libmpv_site_uri, $libmpv_download_url_rel)
         echo "Downloading ${libmpv_download_url} to mpv-dev.7z"
         $libmpv_download_url | Out-File "${env:mpvdir}\version.txt"
         Start-FileDownload "${libmpv_download_url}" -FileName "${env:mpvdir}\mpv-dev.7z" 
      }
      Start-FileDownload "https://raw.githubusercontent.com/mpv-player/mpv/master/libmpv/mpv.def" -FileName "${env:mpvdir}\mpv_dl.def"
      @("EXPORTS") + (Get-Content "${env:mpvdir}\mpv_dl.def") | Set-Content "${env:mpvdir}\mpv.def"
  - dir /s "%MPVDIR%"
  - type %MPVDIR%\version.txt
  - if %platform%==x86 set QTDIR=C:\Qt\5.9.7\msvc2015
  - if %platform%==x64 set QTDIR=C:\Qt\5.9.7\msvc2015_64
  - if %platform%==x86 set PATH=%QTDIR%\bin;C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin;C:\Program Files (x86)\Microsoft SDKs\Windows\v7.1A\Bin;%PATH%
  - if %platform%==x64 set PATH=%QTDIR%\bin;C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\amd64;C:\Program Files (x86)\Microsoft SDKs\Windows\v7.1A\Bin;%PATH%
  - cd "%MPVDIR%"
  - 7z x -y mpv-dev.7z
  - dir /s
  - set INCLUDE=C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include;C:\Program Files (x86)\Microsoft SDKs\Windows\v7.1A\Include;C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt;%MPVDIR%\include
  - if %platform%==x86 set LIB=%QTDIR%\lib;C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\lib;C:\Program Files (x86)\Microsoft SDKs\Windows\v7.1A\lib;C:\Program Files (x86)\Windows Kits\10\Lib\10.0.10150.0\ucrt\x86;%MPVLIBDIR%
  - if %platform%==x64 set LIB=%QTDIR%\lib;C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\lib\amd64;C:\Program Files (x86)\Microsoft SDKs\Windows\v7.1A\lib\x64;C:\Program Files (x86)\Windows Kits\10\Lib\10.0.10150.0\ucrt\x64;%MPVLIBDIR%
  - set VCINSTALLDIR=C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC
  - if %platform%==x86 set OPENSSL_DIR=C:\OpenSSL-Win32
  - if %platform%==x64 set OPENSSL_DIR=C:\OpenSSL-Win64

cache:
  - c:\mpv\mpv-dev.7z -> appveyor.yml
  - c:\mpv\version.txt -> appveyor.yml

build_script:
- cmd: >-
    echo APPVEYOR_BUILD_FOLDER=%APPVEYOR_BUILD_FOLDER%

    cd %APPVEYOR_BUILD_FOLDER%

    "%QTDIR%\bin\qmake" orion.pro

    mkdir libs

    copy /y "%MPVLIBDIR%\mpv-1.dll" libs

    copy /y "%OPENSSL_DIR%\ssleay32.dll" libs

    copy /y "%OPENSSL_DIR%\libeay32.dll" libs

    lib /def:%MPVDIR%\mpv.def /name:%MPVLIBDIR%\mpv-1.dll /out:%MPVLIBDIR%\mpv.lib /MACHINE:%platform%

    nmake %configuration%

    %QTDIR%\bin\windeployqt --qmldir src\qml %configuration%\orion.exe

    dir /s

after_build:
  - 7z a orion_%configuration%_%platform%_snapshot.zip . -x!.git
  - copy /y %MPVDIR%\mpv-dev.7z .

artifacts:
  - path: orion_$(configuration)_$(platform)_snapshot.zip
    name: orion windows $(configuration) $(platform) snapshot zip
  - path: mpv-dev.7z
    name: libmpv dev archive used for build
